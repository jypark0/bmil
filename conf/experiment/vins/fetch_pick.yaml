# @package _global_

name: VINS_pick
method: vins
seed: 1

logger:
  wandb:
    project: Fetch
    name: ${name}

env:
  id: PickAndPlace-v2
  init: &env_defaults
    random_gripper: false
    random_object: false
    random_goal: false
    terminate_on_success: false
  wrappers:
    - src.envs.wrappers.ObservationWrapper: {}

train:
  n_envs: 1
  buffer:
    _target_: tianshou.data.ReplayBuffer
    size: 1000000
  env:
    _target_: tianshou.env.DummyVectorEnv
    norm_obs: false
  collector:
    _target_: src.data.collector.TqdmPosCollector

test:
  n_envs: 20
  n_ep: 1000
  env:
    _target_: tianshou.env.DummyVectorEnv
    norm_obs: ${train.env.norm_obs}
  collector:
    _target_: src.data.collector.TqdmPosCollector

eval:
  n_envs: 20
  n_ep: 10000
  env:
    _target_: tianshou.env.ShmemVectorEnv
    norm_obs: ${test.env.norm_obs}
  env_kwargs:
    <<: *env_defaults
    random_gripper: true
  collector:
    _target_: src.data.collector.TqdmPosCollector

policy:
  value_train:
    n_epoch: 1000
  model_train:
    n_epoch: 500
  rl_train:
    # Don't use VINS+RL
    n_epoch: 0
    step_per_epoch: 1000
    step_per_collect: 1000
  value_function:
    perturb_coef:
      arm: 0.7
      gripper: 0.7
      full: 0.2
  perturb:
    mode: "arm_gripper"

bc_policy:
  batch_size: 64
  train:
    n_epoch: 200
    step_per_epoch: 100
  bc:
    _target_: tianshou.policy.ImitationPolicy
    action_scaling: False
    action_bound_method: ""

demonstration:
  n_ep: 10
  path: ${work_dir}/data/demos/fetch/${env.id}/${.n_ep}episodes.pkl
  repeat: 10

defaults:
  - /policy@bc_policy: bc
  - override /policy: vins
